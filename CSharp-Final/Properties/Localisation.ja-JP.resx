<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutMenu" xml:space="preserve">
    <value>情報(&amp;A)</value>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>連珠の五目並べのアプリケーション</value>
  </data>
  <data name="BanInfo" xml:space="preserve">
    <value>反則する！
理由：</value>
  </data>
  <data name="BanT33" xml:space="preserve">
    <value>三三反則</value>
  </data>
  <data name="BanT44" xml:space="preserve">
    <value>四四反則</value>
  </data>
  <data name="Bantip" xml:space="preserve">
    <value>反則点</value>
  </data>
  <data name="BantipF" xml:space="preserve">
    <value>反則点示す</value>
  </data>
  <data name="BanTitle" xml:space="preserve">
    <value>反則警告</value>
  </data>
  <data name="BanTLong" xml:space="preserve">
    <value>長連反則</value>
  </data>
  <data name="ButtonFont" xml:space="preserve">
    <value>Yu GothicUI</value>
  </data>
  <data name="ButtonFontSize" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="ConfigAIPing" xml:space="preserve">
    <value>CPUのPing(ms)</value>
  </data>
  <data name="ConfigAvator" xml:space="preserve">
    <value>アバター</value>
  </data>
  <data name="ConfigAvatorClear" xml:space="preserve">
    <value>デフォルト</value>
  </data>
  <data name="ConfigAvatorPreview" xml:space="preserve">
    <value>アバタープレビュー</value>
  </data>
  <data name="ConfigCancel" xml:space="preserve">
    <value>取り消し</value>
  </data>
  <data name="ConfigEnvirnment" xml:space="preserve">
    <value>環境</value>
  </data>
  <data name="ConfigGame" xml:space="preserve">
    <value>対局設定</value>
  </data>
  <data name="ConfigLanguage" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="ConfigMusic" xml:space="preserve">
    <value>音楽</value>
  </data>
  <data name="ConfigMusicAndSound" xml:space="preserve">
    <value>音楽と効果音</value>
  </data>
  <data name="ConfigName" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="ConfigRecordPing" xml:space="preserve">
    <value>再生のPing(ms)</value>
  </data>
  <data name="ConfigSound" xml:space="preserve">
    <value>効果音</value>
  </data>
  <data name="ConfigSubmit" xml:space="preserve">
    <value>送信する</value>
  </data>
  <data name="ConfigTimeLimit" xml:space="preserve">
    <value>制限時間(s)</value>
  </data>
  <data name="ConfigUndo" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="ExitInfo" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="ExitInfoText" xml:space="preserve">
    <value>本当にやめる気？</value>
  </data>
  <data name="GameMenu" xml:space="preserve">
    <value>対局(&amp;P)</value>
  </data>
  <data name="GameOver" xml:space="preserve">
    <value>ゲーム終了</value>
  </data>
  <data name="GlobalMenu" xml:space="preserve">
    <value>全体(&amp;G)</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="logo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\logo.ja-JP.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="PeaceAsk" xml:space="preserve">
    <value>は引き分けを要求します！</value>
  </data>
  <data name="PeaceB" xml:space="preserve">
    <value>引き分け</value>
  </data>
  <data name="PeaceBF" xml:space="preserve">
    <value>引き分け申请</value>
  </data>
  <data name="PeaceInfo" xml:space="preserve">
    <value>引き分けリクエスト</value>
  </data>
  <data name="PeaceNotice" xml:space="preserve">
    <value>引き分けです！</value>
  </data>
  <data name="PeaceRequestNotice" xml:space="preserve">
    <value>双方は引き分けすることに合意した。</value>
  </data>
  <data name="PlayerBlack" xml:space="preserve">
    <value>黒</value>
  </data>
  <data name="PlayerWhite" xml:space="preserve">
    <value>白</value>
  </data>
  <data name="ReasonNotice" xml:space="preserve">
    <value>理由</value>
  </data>
  <data name="RecordEnd" xml:space="preserve">
    <value>回放结束！</value>
  </data>
  <data name="RecordError" xml:space="preserve">
    <value>棋譜エラー</value>
  </data>
  <data name="RecordFileError" xml:space="preserve">
    <value>ファイルが破損している！</value>
  </data>
  <data name="RecordGame" xml:space="preserve">
    <value>棋譜再生</value>
  </data>
  <data name="RecordPause" xml:space="preserve">
    <value>再生を一時停止/続ける</value>
  </data>
  <data name="RecordSaveNotice" xml:space="preserve">
    <value>棋譜がこのファイルに保存されました：</value>
  </data>
  <data name="RecordStop" xml:space="preserve">
    <value>再生をやめる</value>
  </data>
  <data name="SmallButtonFont" xml:space="preserve">
    <value>Yu GothicUI</value>
  </data>
  <data name="SmallButtonFontSize" xml:space="preserve">
    <value>12</value>
  </data>
  <data name="StartGame" xml:space="preserve">
    <value>対局開始</value>
  </data>
  <data name="Surrender" xml:space="preserve">
    <value>投了</value>
  </data>
  <data name="SurrenderNotice" xml:space="preserve">
    <value>投了！</value>
  </data>
  <data name="TimeoutNotice" xml:space="preserve">
    <value>はタイムアウトです！</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>撤回</value>
  </data>
  <data name="UndoAsk" xml:space="preserve">
    <value>は撤回を要求します！</value>
  </data>
  <data name="UndoInfo" xml:space="preserve">
    <value>撤回リクエスト</value>
  </data>
  <data name="UndoNotice" xml:space="preserve">
    <value>は撤回した！</value>
  </data>
  <data name="WinNotice" xml:space="preserve">
    <value>の勝利！</value>
  </data>
  <data name="连珠五子棋" xml:space="preserve">
    <value>連珠の五目並べ</value>
  </data>
</root>